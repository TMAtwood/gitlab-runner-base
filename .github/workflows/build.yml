---
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: tmatwood/gitlab-runner-base

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set Up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Install GitVersion
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: '6.0.x'

      # 4. Get Version and Short SHA
      - name: Get version and short SHA
        id: version
        run: |
          echo "VERSION=$(gitversion /showvariable MajorMinorPatch)" >> $GITHUB_ENV
          echo "SHORTSHA=$(gitversion /showvariable ShortSha)" >> $GITHUB_ENV

      # 5. Log Version
      - name: Log version
        run: echo "Building version ${{ env.VERSION }}-${{ env.SHORTSHA }}."

      # 6. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Build Docker Image (Without Pushing)
      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }} . \
            --load

      # 8. Run Container Structure Tests
      - name: Run Container Structure Tests
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}/tests.yml:/tests.yml \
            gcr.io/container-structure-test/container-structure-test:latest test \
            --image ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }} \
            --config /tests.yml

      # 9. Push Docker Image (Only if Tests Pass)
      - name: Push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }} . \
            --push
          docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }}
          docker push ${{ env.IMAGE_NAME }}:latest
