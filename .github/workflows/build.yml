---
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: tmatwood/gitlab-runner-base

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. This step sets up Docker Buildx, a Docker command-line interface (CLI) plug-in for building multi-architecture images.
      - name: Set up Docker Buildx
        id: install_buildx
        uses: docker/setup-buildx-action@v3

      # 3. Setup QEMU for multi-architecture builds on amd64 host machines
      - name: Set up QEMU
        id: install_qemu
        uses: docker/setup-qemu-action@v3

      # 4. Setup Homebrew
      - name: Set up Homebrew
        id: install_homebrew
        uses: Homebrew/actions/setup-homebrew@master
          
      # 5. Install GitVersion
      - name: Install GitVersion
        id: install_gitversion
        run: brew install gitversion

      # 6. Install container-structure-test
      - name: Install Container Structure Test
        id: install_container_structure_test
        run: brew install container-structure-test
      
      # 7. Get Version and Short SHA
      - name: Get version and short SHA
        id: output_version
        run: |
          echo "VERSION=$(gitversion /showvariable MajorMinorPatch)" >> $GITHUB_ENV
          echo "SHORTSHA=$(gitversion /showvariable ShortSha)" >> $GITHUB_ENV

      # 8. Log Version
      - name: Log version
        id: log_version
        run: echo "Building version ${{ env.VERSION }}-${{ env.SHORTSHA }}."

      # 9. Log in to Docker Hub
      - name: Log in to Docker Hub
        id: login_dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Docker build
      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }}
            ${{ env.IMAGE_NAME }}:latest
        env:
          IMAGE: $IMAGE_NAME

      # 11. Container Structure Test
      - name: Run Container Structure Test
        id: run_tests
        uses: plexsystems/container-structure-test-action@v0.3.0
        with:
          image: ${{ steps.docker_build.outputs.image }}:latest  # Reference the image name from the previous step
          config: tests.yml
          
      # 12. Push images if tests pass
      - name: Push Docker images
        id: push_images
        if: success()  # This ensures this step runs only if the previous test step is successful
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true  # Push the image to the registry
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ env.SHORTSHA }}
            ${{ env.IMAGE_NAME }}:latest
        
